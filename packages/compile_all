#!/bin/sh -x

cd

go get github.com/cpuguy83/go-md2man

test -d $GOPATH/src/github.com/containers/libpod && \
( cd $GOPATH/src/github.com/containers/libpod && git reset --hard HEAD )

test -d $GOPATH/src/github.com/containers/buildah && \
( cd $GOPATH/src/github.com/containers/buildah && git reset --hard HEAD )

test -d $GOPATH/src/github.com/cri-o/cri-o && \
( cd $GOPATH/src/github.com/cri-o/cri-o && git reset --hard HEAD )

test -d $GOPATH/src/github.com/rancher/k3s && \
( cd $GOPATH/src/github.com/rancher/k3s && git reset --hard HEAD )

# runc

tce-load -wic libseccomp-dev bash

go get -d -u github.com/opencontainers/runc
cd $GOPATH/src/github.com/opencontainers/runc
make runc
sudo install -D -m0755 runc /usr/local/sbin/runc
cd -

# crun

tce-load -wic python3 autoconf automake libtool libtool-dev libcap-dev libseccomp-dev libyajl-dev

git clone https://github.com/containers/crun
cd crun
git pull
./autogen.sh
./configure --disable-systemd
make
sudo install -D -m0755 crun /usr/local/bin/crun
cd -

# conmon

tce-load -wic libseccomp-dev bash glib2-dev

go get -d -u github.com/containers/conmon
cd $GOPATH/src/github.com/containers/conmon
make
sudo install -D -m 755 bin/conmon /usr/local/lib/podman/conmon
sudo install -D -m 755 bin/conmon /usr/local/lib/crio/conmon
cd -

# cni-plugins

tce-load -wic bash

go get -d -u github.com/containernetworking/plugins
cd $GOPATH/src/github.com/containernetworking/plugins
bash build_linux.sh
sudo mkdir -p /usr/local/lib/cni
sudo cp bin/* /usr/local/lib/cni
cd -

# podman

tce-load -wic libseccomp-dev glib2-dev gpgme-dev bash

go get -d -u github.com/containers/libpod
cd $GOPATH/src/github.com/containers/libpod
git checkout v1.9
git pull --ff-only
sed -e 's|"/etc/cni|"/usr/local/etc/cni|' -i libpod.conf
sed -e 's|"/etc/cni|"/usr/local/etc/cni|' -i libpod/runtime.go
sed -e 's|"/etc/cni|"/usr/local/etc/cni|' -i pkg/network/config.go
sed -e 's|etcDir + "/cni|"/usr/local/etc/cni|' -i libpod/runtime.go
sed -e 's|_etcDir + "/cni|"/usr/local/etc/cni|' -i libpod/config/default.go
sed -e 's|/usr/libexec/podman/catatonit|/usr/local/lib/podman/catatonit|' -i libpod.conf
sed -e 's|/usr/libexec/podman/catatonit|/usr/local/lib/podman/catatonit|' -i libpod/define/config.go
sed -e 's|/usr/share/containers|/usr/local/share/containers|' -i libpod/runtime.go
make podman
eval `grep ^CATATONIT_VERSION hack/install_catatonit.sh`
sudo install -D -m 755 bin/podman /usr/local/bin/podman
sudo install -D -m 644 libpod.conf /usr/local/share/containers/libpod.conf
cd -

# catatonit

tce-load -wic autoconf automake libtool-dev

git clone https://github.com/openSUSE/catatonit
cd catatonit
git pull
git checkout $CATATONIT_VERSION
autoreconf -i
./configure
make
sudo install -D -m 755 catatonit /usr/local/lib/podman/catatonit
cd -

# varlink

tce-load -wic git meson

git clone https://github.com/varlink/libvarlink
cd libvarlink
git pull
sed -e 's|/usr/bin/python3|/usr/bin/env python3|' -i varlink-wrapper.py
meson build --prefix=/usr/local && ninja -C build
sudo install -D -m 755 build/tool/varlink /usr/local/bin/varlink
sudo install -D -m 755 build/lib/libvarlink.so.* /usr/local/lib/
sudo install -D -m 644 lib/varlink.h /usr/local/include/
sudo install -D -m 755 build/lib/libvarlink.so /usr/local/lib/
sudo install -D -m 644 build/lib/libvarlink.pc /usr/local/lib/pkgconfig/
cd -

# resolver

tce-load -wic git meson

git clone https://github.com/varlink/org.varlink.resolver
cd org.varlink.resolver
git pull
sed -e 's|/usr/bin/python3|/usr/bin/env python3|' -i varlink-wrapper.py
make
sudo install -D -m 755 build/src/*resolver /usr/local/sbin/resolver
cd -

# shadow-utils

tce-load -wic autoconf automake libtool-dev gettext-dev libxml2-dev libxslt-dev

git clone https://github.com/shadow-maint/shadow
cd shadow
git pull
./autogen.sh --without-selinux
./configure --enable-subordinate-ids
make -C lib && make -C libmisc
make -C src newuidmap newgidmap
sudo install -m 4755 src/newuidmap /usr/bin/
sudo install -m 4755 src/newgidmap /usr/bin/
cd -

# fuse3

tce-load -wic meson ninja
tce-load -wic udev-lib-dev

git clone https://github.com/libfuse/libfuse
cd libfuse
git pull
meson build --prefix=/usr/local && ninja -C build
sudo install -m 755 build/util/fusermount3 /usr/local/bin/
sudo install -m 755 build/util/mount.fuse3 /usr/local/sbin/
sudo install -m 644 include/*.h /usr/local/include/
sudo install -m 644 build/*/fuse3.pc /usr/local/lib/pkgconfig/
sudo cp -P build/lib/*.so /usr/local/lib/
sudo cp -P build/lib/*.so.? /usr/local/lib/
sudo install -m 755 build/lib/*.so.*.* /usr/local/lib/
cd -

# fuse-overlayfs

tce-load -wic autoconf automake

git clone https://github.com/containers/fuse-overlayfs
cd fuse-overlayfs
git pull
./autogen.sh
./configure
make
sudo install -m 755 fuse-overlayfs /usr/local/bin/
cd -

# slirp4netns

tce-load -wic autoconf automake libcap-dev

git clone https://github.com/rootless-containers/slirp4netns
cd slirp4netns
git pull
./autogen.sh
./configure
make
sudo install -m 755 slirp4netns /usr/local/bin/
cd -

# buildah

tce-load -wic libseccomp-dev lvm2-dev glib2-dev gpgme-dev

go get -d -u github.com/containers/buildah
cd $GOPATH/src/github.com/containers/buildah
sed -e 's|"/etc/cni|"/usr/local/etc/cni|' -i util/types.go
sed -e 's|/usr/libexec/cni:/opt/cni/bin|/usr/local/lib/cni|' -i util/types.go
make buildah
sudo install -D -m0755 buildah /usr/local/bin/buildah
cd -

# skopeo

tce-load -wic lvm2-dev gpgme-dev

go get -d -u github.com/containers/skopeo
cd $GOPATH/src/github.com/containers/skopeo
make binary-local # skopeo
sudo install -D -m 755 skopeo /usr/local/bin/skopeo
cd -

########################################################################

# libnfnetlink

git clone git://git.netfilter.org/libnfnetlink
cd libnfnetlink
git pull
./autogen.sh
./configure --prefix=/usr
make
sudo make install
cd -

# libmnl

git clone git://git.netfilter.org/libmnl
cd libmnl
git pull
./autogen.sh
./configure --prefix=/usr
make
sudo make install
cd -

# libnetfilter_conntrack

git clone git://git.netfilter.org/libnetfilter_conntrack
cd libnetfilter_conntrack
git pull
./autogen.sh
./configure --prefix=/usr
make
sudo make install
cd -

# conntrack

git clone git://git.netfilter.org/conntrack-tools
cd conntrack-tools
git pull
./autogen.sh
./configure --disable-systemd --disable-cttimeout --disable-cthelper
make
sudo install -D -m 755 src/conntrack /usr/sbin/conntrack
cd -

# ipset

git clone git://git.netfilter.org/ipset
cd ipset
git pull
./autogen.sh
./configure --without-kmod
make
sudo install -D -m 755 src/ipset /usr/sbin/ipset
cd -

# crio

tce-load -wic libseccomp-dev glib2-dev

go get -d -u github.com/cri-o/cri-o
cd $GOPATH/src/github.com/cri-o/cri-o
sed -e 's|"/etc/cni|"/usr/local/etc/cni|' -i pkg/config/config_unix.go
sed -e 's|"/opt/cni/bin|"/usr/local/lib/cni|' -i pkg/config/config_unix.go
make binaries
sudo install -D -m 755 bin/crio /usr/local/bin/crio
sudo install -D -m 755 bin/pinns /usr/local/bin/pinns
make crio.conf
sudo install -D -m 644 crio.conf /usr/local/share/crio/crio.conf
sudo install -D -m 644 crictl.yaml /usr/local/share/crio/crictl.yaml
cd -

# k3s

tce-load -wic libseccomp-dev sqlite3-dev

mkdir -p `dirname $GOPATH/src/github.com/rancher/k3s`
git clone --depth 1 --branch "release-1.17" https://github.com/rancher/k3s $GOPATH/src/github.com/rancher/k3s
cd $GOPATH/src/github.com/rancher/k3s
git fetch --depth 1 origin release-1.17
git checkout release-1.17
git pull
go build -tags "libsqlite3 seccomp no_btrfs netcgo osusergo providerless" -ldflags "-w -s" -o k3s ./cmd/server/main.go
sudo install -D -m 755 k3s /usr/local/bin/k3s
sudo ln -sf k3s /usr/local/bin/k3s-server
sudo ln -sf k3s /usr/local/bin/k3s-agent
sudo ln -sf k3s /usr/local/bin/kubectl
sudo ln -sf k3s /usr/local/bin/crictl
cd -
